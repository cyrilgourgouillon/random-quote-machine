{"version":3,"sources":["Components/QuoteBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["QuoteBox","useState","quote","setQuote","author","setAuthor","apiLoadQuote","axios","get","then","r","data","content","catch","e","console","log","useEffect","id","className","class","type","onClick","href","target","rel","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAqCeA,EAlCE,WAEf,MAA0BC,mBAAS,oBAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,oBAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,WACnBC,IAAMC,IAAI,kCACHC,MAAK,SAAAC,GACJP,EAASO,EAAEC,KAAKC,SAChBP,EAAUK,EAAEC,KAAKP,WAElBS,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,OAWhC,OAJAG,qBAAU,WACRX,MACC,IAGD,qBAAKY,GAAG,iBAAiBC,UAAU,4BAAnC,SACE,sBAAKD,GAAG,YAAR,UACE,sBAAKA,GAAG,OAAR,UAAe,mBAAGE,MAAM,sBAAwB,uBAAMA,MAAM,aAAZ,cAA2BlB,EAA3B,OAAyC,mBAAGkB,MAAM,0BAClG,sBAAKF,GAAG,SAAR,UAAiB,mBAAGE,MAAM,uBAA1B,IAAqDhB,KACrD,wBAAQiB,KAAK,SAASH,GAAG,YAAYC,UAAU,eAAeG,QAbxC,WAC1BhB,KAYI,SAA4F,mBAAGc,MAAM,sBACrG,mBAAGF,GAAG,cAAcK,KAAI,oDAA+CrB,EAA/C,iBAA6DE,GAAUoB,OAAO,SAASC,IAAI,aAAnH,SAAgI,mBAAGL,MAAM,kCCrBlIM,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAEnB,IADLqB,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.42f9cb14.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nconst QuoteBox = () => {\r\n  \r\n  const [quote, setQuote] = useState(\"En chargement...\");\r\n  const [author, setAuthor] = useState(\"En chargement...\");\r\n  \r\n  const apiLoadQuote = () => {\r\n    axios.get(\"https://api.quotable.io/random\")\r\n          .then(r => {\r\n            setQuote(r.data.content)\r\n            setAuthor(r.data.author)\r\n          })\r\n          .catch(e => console.log(e));\r\n  }\r\n\r\n  const handleNewQuoteClick = () => {\r\n    apiLoadQuote();\r\n  };\r\n  \r\n  useEffect(() => {\r\n    apiLoadQuote();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"main-container\" className=\"d-flex align-items-center\">\r\n      <div id=\"quote-box\">\r\n        <div id=\"text\"><i class=\"fas fa-quote-left\"></i><span class=\"quote-text\"> {quote} </span><i class=\"fas fa-quote-right\"></i></div>\r\n        <div id=\"author\"><i class=\"fas fa-angle-right\"></i> {author}</div>\r\n        <button type=\"button\" id=\"new-quote\" className=\"btn btn-dark\" onClick={handleNewQuoteClick}><i class=\"fas fa-sync-alt\"></i></button>\r\n        <a id=\"tweet-quote\" href={`https://www.twitter.com/intent/tweet?text=${quote} from ${author}`} target=\"_blank\" rel=\"noreferrer\"><i class=\"fab fa-twitter-square\"></i></a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuoteBox;\r\n","/* eslint-disable */\r\nimport './App.css';\r\nimport QuoteBox from './Components/QuoteBox';\r\n\r\nfunction App() {\r\n  return (\r\n    <QuoteBox />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}